apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mailSender.fullname" . }}
  labels:
    {{- include "mailSender.labels" . | nindent 4 }}
  annotations:
    checksum/secret-1: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- if or .Values.mailSender.confirmationTemplate .Values.mailSender.forwardTemplate }}
    checksum/configmap-1: {{ include (print $.Template.BasePath "/configmap-templates.yaml") . | sha256sum }}
{{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mailSender.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mailSender.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mailSender.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: NODE_ENV
            value: production
          - name: PORT
            value: "3000"
          - name: SMTP_HOST
            value: {{ .Values.mailSender.smtp.host }}
          - name: SMTP_PORT
            value: {{ quote .Values.mailSender.smtp.port }}
          - name: SMTP_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-creds
                key: user 
          - name: SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-creds
                key: password
          - name: TO_EMAIL
            value: {{ .Values.mailSender.toEmail }}
          - name: FROM_EMAIL
            value: {{ .Values.mailSender.fromEmail }}
          - name: CONFIRMATION_SUBJECT
            value: {{ quote .Values.mailSender.confirmationSubject }}
          {{- if .Values.mailSender.confirmationTemplate }}
          - name: CONFIRMATION_TEMPLATE
            value: /templates/confirmation.hbs
          {{- end }}
          - name: FORM_TO_SMTP_SUBJECT
            value: {{ quote .Values.mailSender.forwardSubject }}
          {{- if .Values.mailSender.forwardTemplate }}
          - name: FORM_TO_SMTP_TEMPLATE
            value: /templates/forward.hbs
          {{- end }}
          - name: CORS_ORIGINS
            value: {{ quote .Values.mailSender.corsOrigins }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or .Values.mailSender.confirmationTemplate .Values.mailSender.forwardTemplate }}
          volumeMounts:
            - name: email-templates
              mountPath: /templates
              readOnly: true
      volumes:
        - name: email-templates
          configMap:
            name: {{ .Release.Name }}-templates
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
